package IPclLicenseServiceContract;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 8/29/2017 12:54:15 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class ActiveLicenseModel implements KvmSerializable {
    
    public String activationDate;
    public int deviceCount;
    public double excessPayment;
    public String expirationDate;
    public String firstPayExpirationDate;
    public boolean isEuro;
    public boolean isExpired;
    public boolean isFree;
    public boolean isPaid;
    public String licenseGuid;
    public String licensePlanGuid;
    public String licensePlanName;
    public boolean paymentDateExceeded;
    
    public ActiveLicenseModel(){}
    
    public ActiveLicenseModel(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("ActivationDate"))
        {
            Object obj = soapObject.getProperty("ActivationDate");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                activationDate = j.toString();
            }else if (obj!= null && obj instanceof String){
                activationDate = (String) obj;
            }
        }
        if (soapObject.hasProperty("DeviceCount"))
        {
            Object obj = soapObject.getProperty("DeviceCount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                deviceCount = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                deviceCount = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("ExcessPayment"))
        {
            Object obj = soapObject.getProperty("ExcessPayment");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                excessPayment = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                excessPayment = (Double) obj;
            }
        }
        if (soapObject.hasProperty("ExpirationDate"))
        {
            Object obj = soapObject.getProperty("ExpirationDate");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                expirationDate = j.toString();
            }else if (obj!= null && obj instanceof String){
                expirationDate = (String) obj;
            }
        }
        if (soapObject.hasProperty("FirstPayExpirationDate"))
        {
            Object obj = soapObject.getProperty("FirstPayExpirationDate");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                firstPayExpirationDate = j.toString();
            }else if (obj!= null && obj instanceof String){
                firstPayExpirationDate = (String) obj;
            }
        }
        if (soapObject.hasProperty("IsEuro"))
        {
            Object obj = soapObject.getProperty("IsEuro");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                isEuro = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                isEuro = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IsExpired"))
        {
            Object obj = soapObject.getProperty("IsExpired");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                isExpired = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                isExpired = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IsFree"))
        {
            Object obj = soapObject.getProperty("IsFree");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                isFree = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                isFree = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IsPaid"))
        {
            Object obj = soapObject.getProperty("IsPaid");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                isPaid = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                isPaid = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("LicenseGuid"))
        {
            Object obj = soapObject.getProperty("LicenseGuid");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                licenseGuid = j.toString();
            }else if (obj!= null && obj instanceof String){
                licenseGuid = (String) obj;
            }
        }
        if (soapObject.hasProperty("LicensePlanGuid"))
        {
            Object obj = soapObject.getProperty("LicensePlanGuid");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                licensePlanGuid = j.toString();
            }else if (obj!= null && obj instanceof String){
                licensePlanGuid = (String) obj;
            }
        }
        if (soapObject.hasProperty("LicensePlanName"))
        {
            Object obj = soapObject.getProperty("LicensePlanName");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                licensePlanName = j.toString();
            }else if (obj!= null && obj instanceof String){
                licensePlanName = (String) obj;
            }
        }
        if (soapObject.hasProperty("PaymentDateExceeded"))
        {
            Object obj = soapObject.getProperty("PaymentDateExceeded");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                paymentDateExceeded = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                paymentDateExceeded = (Boolean) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 1:
                return activationDate;
            case 2:
                return deviceCount;
            case 3:
                return excessPayment;
            case 4:
                return expirationDate;
            case 5:
                return firstPayExpirationDate;
            case 6:
                return isEuro;
            case 7:
                return isExpired;
            case 8:
                return isFree;
            case 9:
                return isPaid;
            case 10:
                return licenseGuid;
            case 11:
                return licensePlanGuid;
            case 12:
                return licensePlanName;
            case 13:
                return paymentDateExceeded;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 14;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ActivationDate";
                break;
            case 2:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "DeviceCount";
                break;
            case 3:
                info.type = Double.class;
                info.name = "ExcessPayment";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ExpirationDate";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "FirstPayExpirationDate";
                break;
            case 6:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsEuro";
                break;
            case 7:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsExpired";
                break;
            case 8:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsFree";
                break;
            case 9:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsPaid";
                break;
            case 10:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "LicenseGuid";
                break;
            case 11:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "LicensePlanGuid";
                break;
            case 12:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "LicensePlanName";
                break;
            case 13:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "PaymentDateExceeded";
                break;
        }
    }

    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
