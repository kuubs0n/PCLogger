package IPclLicenseServiceContract;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 8/29/2017 12:54:15 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class DiscountDevicesModel implements KvmSerializable {
    
    public int maxDevices;
    public int minDevices;

    public String activeFrom;
    public String disableAt;
    public double discountValue;
    public String guid;
    public String licensePlanGuid;
    public String productGuid;
    
    public DiscountDevicesModel(){}
    
    public DiscountDevicesModel(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("MaxDevices"))
        {
            Object obj = soapObject.getProperty("MaxDevices");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                maxDevices = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                maxDevices = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("MinDevices"))
        {
            Object obj = soapObject.getProperty("MinDevices");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                minDevices = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                minDevices = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("ExtensionData"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("ExtensionData");

            
        }
        if (soapObject.hasProperty("ActiveFrom"))
        {
            Object obj = soapObject.getProperty("ActiveFrom");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                activeFrom = j.toString();
            }else if (obj!= null && obj instanceof String){
                activeFrom = (String) obj;
            }
        }
        if (soapObject.hasProperty("DisableAt"))
        {
            Object obj = soapObject.getProperty("DisableAt");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                disableAt = j.toString();
            }else if (obj!= null && obj instanceof String){
                disableAt = (String) obj;
            }
        }
        if (soapObject.hasProperty("DiscountValue"))
        {
            Object obj = soapObject.getProperty("DiscountValue");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                discountValue = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                discountValue = (Double) obj;
            }
        }
        if (soapObject.hasProperty("Guid"))
        {
            Object obj = soapObject.getProperty("Guid");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                guid = j.toString();
            }else if (obj!= null && obj instanceof String){
                guid = (String) obj;
            }
        }
        if (soapObject.hasProperty("LicensePlanGuid"))
        {
            Object obj = soapObject.getProperty("LicensePlanGuid");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                licensePlanGuid = j.toString();
            }else if (obj!= null && obj instanceof String){
                licensePlanGuid = (String) obj;
            }
        }
        if (soapObject.hasProperty("ProductGuid"))
        {
            Object obj = soapObject.getProperty("ProductGuid");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                productGuid = j.toString();
            }else if (obj!= null && obj instanceof String){
                productGuid = (String) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return maxDevices;
            case 1:
                return minDevices;
            case 2:
                return null;
            case 3:
                return activeFrom;
            case 4:
                return disableAt;
            case 5:
                return discountValue;
            case 6:
                return guid;
            case 7:
                return licensePlanGuid;
            case 8:
                return productGuid;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 9;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "MaxDevices";
                break;
            case 1:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "MinDevices";
                break;
            case 2:
                info.type = null;
                info.name = "ExtensionData";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ActiveFrom";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "DisableAt";
                break;
            case 5:
                info.type = Double.class;
                info.name = "DiscountValue";
                break;
            case 6:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Guid";
                break;
            case 7:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "LicensePlanGuid";
                break;
            case 8:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ProductGuid";
                break;
        }
    }
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
