package IPclLicenseServiceContract;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 8/29/2017 12:54:15 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class ExtendedInvoiceModel implements KvmSerializable {
    
    public int additionalDevices;
    public String expirationDate;
    public String licensePlanName;
    public String orderNumber;
    public String organizationName;
    public String parentInvoiceNumber;
    public String productName;

    public String city;
    public String companyName;
    public String computerInfo;
    public String country;
    public String countryName;
    public String createdAt;
    public String email;
    public String firstName;
    public String gender;
    public String guid;
    public String homeNumber;
    public String informationSource;
    public String invoiceNumber;
    public boolean isNipEu;
    public boolean isOrder;
    public boolean isPaid;
    public String lang;
    public String lastName;
    public String nIP;
    public String paidDate;
    public int periodsCount;
    public String postalCode;
    public double priceBrutto;
    public double priceBruttoEuro;
    public double priceNetto;
    public double priceNettoEuro;
    public String street;
    public String telephoneNumber;
    public String title;
    
    public ExtendedInvoiceModel(){}
    
    public ExtendedInvoiceModel(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("AdditionalDevices"))
        {
            Object obj = soapObject.getProperty("AdditionalDevices");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                additionalDevices = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                additionalDevices = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("ExpirationDate"))
        {
            Object obj = soapObject.getProperty("ExpirationDate");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                expirationDate = j.toString();
            }else if (obj!= null && obj instanceof String){
                expirationDate = (String) obj;
            }
        }
        if (soapObject.hasProperty("LicensePlanName"))
        {
            Object obj = soapObject.getProperty("LicensePlanName");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                licensePlanName = j.toString();
            }else if (obj!= null && obj instanceof String){
                licensePlanName = (String) obj;
            }
        }
        if (soapObject.hasProperty("OrderNumber"))
        {
            Object obj = soapObject.getProperty("OrderNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                orderNumber = j.toString();
            }else if (obj!= null && obj instanceof String){
                orderNumber = (String) obj;
            }
        }
        if (soapObject.hasProperty("OrganizationName"))
        {
            Object obj = soapObject.getProperty("OrganizationName");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                organizationName = j.toString();
            }else if (obj!= null && obj instanceof String){
                organizationName = (String) obj;
            }
        }
        if (soapObject.hasProperty("ParentInvoiceNumber"))
        {
            Object obj = soapObject.getProperty("ParentInvoiceNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                parentInvoiceNumber = j.toString();
            }else if (obj!= null && obj instanceof String){
                parentInvoiceNumber = (String) obj;
            }
        }
        if (soapObject.hasProperty("ProductName"))
        {
            Object obj = soapObject.getProperty("ProductName");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                productName = j.toString();
            }else if (obj!= null && obj instanceof String){
                productName = (String) obj;
            }
        }
        if (soapObject.hasProperty("ExtensionData"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("ExtensionData");

            
        }
        if (soapObject.hasProperty("City"))
        {
            Object obj = soapObject.getProperty("City");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                city = j.toString();
            }else if (obj!= null && obj instanceof String){
                city = (String) obj;
            }
        }
        if (soapObject.hasProperty("CompanyName"))
        {
            Object obj = soapObject.getProperty("CompanyName");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                companyName = j.toString();
            }else if (obj!= null && obj instanceof String){
                companyName = (String) obj;
            }
        }
        if (soapObject.hasProperty("ComputerInfo"))
        {
            Object obj = soapObject.getProperty("ComputerInfo");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                computerInfo = j.toString();
            }else if (obj!= null && obj instanceof String){
                computerInfo = (String) obj;
            }
        }
        if (soapObject.hasProperty("Country"))
        {
            Object obj = soapObject.getProperty("Country");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                country = j.toString();
            }else if (obj!= null && obj instanceof String){
                country = (String) obj;
            }
        }
        if (soapObject.hasProperty("CountryName"))
        {
            Object obj = soapObject.getProperty("CountryName");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                countryName = j.toString();
            }else if (obj!= null && obj instanceof String){
                countryName = (String) obj;
            }
        }
        if (soapObject.hasProperty("CreatedAt"))
        {
            Object obj = soapObject.getProperty("CreatedAt");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                createdAt = j.toString();
            }else if (obj!= null && obj instanceof String){
                createdAt = (String) obj;
            }
        }
        if (soapObject.hasProperty("Email"))
        {
            Object obj = soapObject.getProperty("Email");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                email = j.toString();
            }else if (obj!= null && obj instanceof String){
                email = (String) obj;
            }
        }
        if (soapObject.hasProperty("FirstName"))
        {
            Object obj = soapObject.getProperty("FirstName");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                firstName = j.toString();
            }else if (obj!= null && obj instanceof String){
                firstName = (String) obj;
            }
        }
        if (soapObject.hasProperty("Gender"))
        {
            Object obj = soapObject.getProperty("Gender");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                gender = j.toString();
            }else if (obj!= null && obj instanceof String){
                gender = (String) obj;
            }
        }
        if (soapObject.hasProperty("Guid"))
        {
            Object obj = soapObject.getProperty("Guid");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                guid = j.toString();
            }else if (obj!= null && obj instanceof String){
                guid = (String) obj;
            }
        }
        if (soapObject.hasProperty("HomeNumber"))
        {
            Object obj = soapObject.getProperty("HomeNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                homeNumber = j.toString();
            }else if (obj!= null && obj instanceof String){
                homeNumber = (String) obj;
            }
        }
        if (soapObject.hasProperty("InformationSource"))
        {
            Object obj = soapObject.getProperty("InformationSource");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                informationSource = j.toString();
            }else if (obj!= null && obj instanceof String){
                informationSource = (String) obj;
            }
        }
        if (soapObject.hasProperty("InvoiceNumber"))
        {
            Object obj = soapObject.getProperty("InvoiceNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                invoiceNumber = j.toString();
            }else if (obj!= null && obj instanceof String){
                invoiceNumber = (String) obj;
            }
        }
        if (soapObject.hasProperty("IsNipEu"))
        {
            Object obj = soapObject.getProperty("IsNipEu");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                isNipEu = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                isNipEu = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IsOrder"))
        {
            Object obj = soapObject.getProperty("IsOrder");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                isOrder = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                isOrder = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IsPaid"))
        {
            Object obj = soapObject.getProperty("IsPaid");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                isPaid = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                isPaid = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Lang"))
        {
            Object obj = soapObject.getProperty("Lang");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                lang = j.toString();
            }else if (obj!= null && obj instanceof String){
                lang = (String) obj;
            }
        }
        if (soapObject.hasProperty("LastName"))
        {
            Object obj = soapObject.getProperty("LastName");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                lastName = j.toString();
            }else if (obj!= null && obj instanceof String){
                lastName = (String) obj;
            }
        }
        if (soapObject.hasProperty("NIP"))
        {
            Object obj = soapObject.getProperty("NIP");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                nIP = j.toString();
            }else if (obj!= null && obj instanceof String){
                nIP = (String) obj;
            }
        }
        if (soapObject.hasProperty("PaidDate"))
        {
            Object obj = soapObject.getProperty("PaidDate");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                paidDate = j.toString();
            }else if (obj!= null && obj instanceof String){
                paidDate = (String) obj;
            }
        }
        if (soapObject.hasProperty("PeriodsCount"))
        {
            Object obj = soapObject.getProperty("PeriodsCount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                periodsCount = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                periodsCount = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("PostalCode"))
        {
            Object obj = soapObject.getProperty("PostalCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                postalCode = j.toString();
            }else if (obj!= null && obj instanceof String){
                postalCode = (String) obj;
            }
        }
        if (soapObject.hasProperty("PriceBrutto"))
        {
            Object obj = soapObject.getProperty("PriceBrutto");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                priceBrutto = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                priceBrutto = (Double) obj;
            }
        }
        if (soapObject.hasProperty("PriceBruttoEuro"))
        {
            Object obj = soapObject.getProperty("PriceBruttoEuro");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                priceBruttoEuro = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                priceBruttoEuro = (Double) obj;
            }
        }
        if (soapObject.hasProperty("PriceNetto"))
        {
            Object obj = soapObject.getProperty("PriceNetto");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                priceNetto = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                priceNetto = (Double) obj;
            }
        }
        if (soapObject.hasProperty("PriceNettoEuro"))
        {
            Object obj = soapObject.getProperty("PriceNettoEuro");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                priceNettoEuro = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                priceNettoEuro = (Double) obj;
            }
        }
        if (soapObject.hasProperty("Street"))
        {
            Object obj = soapObject.getProperty("Street");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                street = j.toString();
            }else if (obj!= null && obj instanceof String){
                street = (String) obj;
            }
        }
        if (soapObject.hasProperty("TelephoneNumber"))
        {
            Object obj = soapObject.getProperty("TelephoneNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                telephoneNumber = j.toString();
            }else if (obj!= null && obj instanceof String){
                telephoneNumber = (String) obj;
            }
        }
        if (soapObject.hasProperty("Title"))
        {
            Object obj = soapObject.getProperty("Title");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                title = j.toString();
            }else if (obj!= null && obj instanceof String){
                title = (String) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return additionalDevices;
            case 1:
                return expirationDate;
            case 2:
                return licensePlanName;
            case 3:
                return orderNumber;
            case 4:
                return organizationName;
            case 5:
                return parentInvoiceNumber;
            case 6:
                return productName;
            case 7:
                return null;
            case 8:
                return city;
            case 9:
                return companyName;
            case 10:
                return computerInfo;
            case 11:
                return country;
            case 12:
                return countryName;
            case 13:
                return createdAt;
            case 14:
                return email;
            case 15:
                return firstName;
            case 16:
                return gender;
            case 17:
                return guid;
            case 18:
                return homeNumber;
            case 19:
                return informationSource;
            case 20:
                return invoiceNumber;
            case 21:
                return isNipEu;
            case 22:
                return isOrder;
            case 23:
                return isPaid;
            case 24:
                return lang;
            case 25:
                return lastName;
            case 26:
                return nIP;
            case 27:
                return paidDate;
            case 28:
                return periodsCount;
            case 29:
                return postalCode;
            case 30:
                return priceBrutto;
            case 31:
                return priceBruttoEuro;
            case 32:
                return priceNetto;
            case 33:
                return priceNettoEuro;
            case 34:
                return street;
            case 35:
                return telephoneNumber;
            case 36:
                return title;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 37;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "AdditionalDevices";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ExpirationDate";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "LicensePlanName";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "OrderNumber";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "OrganizationName";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ParentInvoiceNumber";
                break;
            case 6:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ProductName";
                break;
            case 7:
                info.type = null;
                info.name = "ExtensionData";
                break;
            case 8:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "City";
                break;
            case 9:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CompanyName";
                break;
            case 10:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ComputerInfo";
                break;
            case 11:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Country";
                break;
            case 12:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CountryName";
                break;
            case 13:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CreatedAt";
                break;
            case 14:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Email";
                break;
            case 15:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "FirstName";
                break;
            case 16:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Gender";
                break;
            case 17:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Guid";
                break;
            case 18:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "HomeNumber";
                break;
            case 19:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "InformationSource";
                break;
            case 20:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "InvoiceNumber";
                break;
            case 21:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsNipEu";
                break;
            case 22:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsOrder";
                break;
            case 23:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsPaid";
                break;
            case 24:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Lang";
                break;
            case 25:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "LastName";
                break;
            case 26:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "NIP";
                break;
            case 27:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "PaidDate";
                break;
            case 28:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "PeriodsCount";
                break;
            case 29:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "PostalCode";
                break;
            case 30:
                info.type = Double.class;
                info.name = "PriceBrutto";
                break;
            case 31:
                info.type = Double.class;
                info.name = "PriceBruttoEuro";
                break;
            case 32:
                info.type = Double.class;
                info.name = "PriceNetto";
                break;
            case 33:
                info.type = Double.class;
                info.name = "PriceNettoEuro";
                break;
            case 34:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Street";
                break;
            case 35:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "TelephoneNumber";
                break;
            case 36:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Title";
                break;
        }
    }
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
