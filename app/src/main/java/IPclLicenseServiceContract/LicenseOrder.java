package IPclLicenseServiceContract;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 8/29/2017 12:54:15 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import IPclLicenseServiceContract.WS_Enums.*;

import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class LicenseOrder implements KvmSerializable {
    

    public int additionalDaysCount;
    public int additionalDevicesCount;
    public int additionalPeriodsCount;
    public String expirationDate;
    public String invoiceGuid;
    public boolean isEuro;
    public boolean isFree;
    public String licenseActivationDate;
    public String licenseGuid;
    public String licensePlanGuid;
    public String licensePlanName;
    public String orderDate;
    public OrderType orderType;
    public String organizationGuid;
    public String paidDate;
    public double priceBrutto;
    public double priceNetto;
    public String productGuid;
    public int totalDaysCount;
    public int totalDevicesCount;
    
    public LicenseOrder(){}
    
    public LicenseOrder(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("ExtensionData"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("ExtensionData");

            
        }
        if (soapObject.hasProperty("AdditionalDaysCount"))
        {
            Object obj = soapObject.getProperty("AdditionalDaysCount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                additionalDaysCount = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                additionalDaysCount = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("AdditionalDevicesCount"))
        {
            Object obj = soapObject.getProperty("AdditionalDevicesCount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                additionalDevicesCount = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                additionalDevicesCount = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("AdditionalPeriodsCount"))
        {
            Object obj = soapObject.getProperty("AdditionalPeriodsCount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                additionalPeriodsCount = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                additionalPeriodsCount = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("ExpirationDate"))
        {
            Object obj = soapObject.getProperty("ExpirationDate");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                expirationDate = j.toString();
            }else if (obj!= null && obj instanceof String){
                expirationDate = (String) obj;
            }
        }
        if (soapObject.hasProperty("InvoiceGuid"))
        {
            Object obj = soapObject.getProperty("InvoiceGuid");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                invoiceGuid = j.toString();
            }else if (obj!= null && obj instanceof String){
                invoiceGuid = (String) obj;
            }
        }
        if (soapObject.hasProperty("IsEuro"))
        {
            Object obj = soapObject.getProperty("IsEuro");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                isEuro = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                isEuro = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IsFree"))
        {
            Object obj = soapObject.getProperty("IsFree");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                isFree = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                isFree = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("LicenseActivationDate"))
        {
            Object obj = soapObject.getProperty("LicenseActivationDate");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                licenseActivationDate = j.toString();
            }else if (obj!= null && obj instanceof String){
                licenseActivationDate = (String) obj;
            }
        }
        if (soapObject.hasProperty("LicenseGuid"))
        {
            Object obj = soapObject.getProperty("LicenseGuid");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                licenseGuid = j.toString();
            }else if (obj!= null && obj instanceof String){
                licenseGuid = (String) obj;
            }
        }
        if (soapObject.hasProperty("LicensePlanGuid"))
        {
            Object obj = soapObject.getProperty("LicensePlanGuid");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                licensePlanGuid = j.toString();
            }else if (obj!= null && obj instanceof String){
                licensePlanGuid = (String) obj;
            }
        }
        if (soapObject.hasProperty("LicensePlanName"))
        {
            Object obj = soapObject.getProperty("LicensePlanName");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                licensePlanName = j.toString();
            }else if (obj!= null && obj instanceof String){
                licensePlanName = (String) obj;
            }
        }
        if (soapObject.hasProperty("OrderDate"))
        {
            Object obj = soapObject.getProperty("OrderDate");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                orderDate = j.toString();
            }else if (obj!= null && obj instanceof String){
                orderDate = (String) obj;
            }
        }
        if (soapObject.hasProperty("OrderType"))
        {
            Object obj = soapObject.getProperty("OrderType");
            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive)obj;
                orderType = OrderType.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("OrganizationGuid"))
        {
            Object obj = soapObject.getProperty("OrganizationGuid");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                organizationGuid = j.toString();
            }else if (obj!= null && obj instanceof String){
                organizationGuid = (String) obj;
            }
        }
        if (soapObject.hasProperty("PaidDate"))
        {
            Object obj = soapObject.getProperty("PaidDate");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                paidDate = j.toString();
            }else if (obj!= null && obj instanceof String){
                paidDate = (String) obj;
            }
        }
        if (soapObject.hasProperty("PriceBrutto"))
        {
            Object obj = soapObject.getProperty("PriceBrutto");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                priceBrutto = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                priceBrutto = (Double) obj;
            }
        }
        if (soapObject.hasProperty("PriceNetto"))
        {
            Object obj = soapObject.getProperty("PriceNetto");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                priceNetto = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                priceNetto = (Double) obj;
            }
        }
        if (soapObject.hasProperty("ProductGuid"))
        {
            Object obj = soapObject.getProperty("ProductGuid");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                productGuid = j.toString();
            }else if (obj!= null && obj instanceof String){
                productGuid = (String) obj;
            }
        }
        if (soapObject.hasProperty("TotalDaysCount"))
        {
            Object obj = soapObject.getProperty("TotalDaysCount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                totalDaysCount = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                totalDaysCount = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("TotalDevicesCount"))
        {
            Object obj = soapObject.getProperty("TotalDevicesCount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                totalDevicesCount = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                totalDevicesCount = (Integer) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return null;
            case 1:
                return additionalDaysCount;
            case 2:
                return additionalDevicesCount;
            case 3:
                return additionalPeriodsCount;
            case 4:
                return expirationDate;
            case 5:
                return invoiceGuid;
            case 6:
                return isEuro;
            case 7:
                return isFree;
            case 8:
                return licenseActivationDate;
            case 9:
                return licenseGuid;
            case 10:
                return licensePlanGuid;
            case 11:
                return licensePlanName;
            case 12:
                return orderDate;
            case 13:
                return orderType.toString();
            case 14:
                return organizationGuid;
            case 15:
                return paidDate;
            case 16:
                return priceBrutto;
            case 17:
                return priceNetto;
            case 18:
                return productGuid;
            case 19:
                return totalDaysCount;
            case 20:
                return totalDevicesCount;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 21;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = null;
                info.name = "ExtensionData";
                break;
            case 1:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "AdditionalDaysCount";
                break;
            case 2:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "AdditionalDevicesCount";
                break;
            case 3:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "AdditionalPeriodsCount";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ExpirationDate";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "InvoiceGuid";
                break;
            case 6:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsEuro";
                break;
            case 7:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsFree";
                break;
            case 8:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "LicenseActivationDate";
                break;
            case 9:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "LicenseGuid";
                break;
            case 10:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "LicensePlanGuid";
                break;
            case 11:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "LicensePlanName";
                break;
            case 12:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "OrderDate";
                break;
            case 13:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "OrderType";
                break;
            case 14:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "OrganizationGuid";
                break;
            case 15:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "PaidDate";
                break;
            case 16:
                info.type = Double.class;
                info.name = "PriceBrutto";
                break;
            case 17:
                info.type = Double.class;
                info.name = "PriceNetto";
                break;
            case 18:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ProductGuid";
                break;
            case 19:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "TotalDaysCount";
                break;
            case 20:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "TotalDevicesCount";
                break;
        }
    }
    
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
