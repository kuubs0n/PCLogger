package IPclLicenseServiceContract;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 8/29/2017 12:54:15 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import IPclLicenseServiceContract.VectorDiscountDevicesModel;
import IPclLicenseServiceContract.VectorDiscountPeriodModel;
import IPclLicenseServiceContract.LicensePlanModel;
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class LicensePlanOfferModel implements KvmSerializable {
    

    public VectorDiscountDevicesModel discountForDevices;
    public VectorDiscountPeriodModel discountForPeriod;
    public boolean isCodeDiscountAvailable;
    public LicensePlanModel licensePlan;
    
    public LicensePlanOfferModel(){}
    
    public LicensePlanOfferModel(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("ExtensionData"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("ExtensionData");

            
        }
        if (soapObject.hasProperty("DiscountForDevices"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("DiscountForDevices");
            discountForDevices = new VectorDiscountDevicesModel(j);
        }
        if (soapObject.hasProperty("DiscountForPeriod"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("DiscountForPeriod");
            discountForPeriod = new VectorDiscountPeriodModel(j);
        }
        if (soapObject.hasProperty("IsCodeDiscountAvailable"))
        {
            Object obj = soapObject.getProperty("IsCodeDiscountAvailable");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                isCodeDiscountAvailable = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                isCodeDiscountAvailable = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("LicensePlan"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("LicensePlan");
            licensePlan =  new LicensePlanModel (j);
            
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return null;
            case 1:
                return discountForDevices;
            case 2:
                return discountForPeriod;
            case 3:
                return isCodeDiscountAvailable;
            case 4:
                return licensePlan;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 5;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = null;
                info.name = "ExtensionData";
                break;
            case 1:
                info.type = PropertyInfo.VECTOR_CLASS;
                info.name = "DiscountForDevices";
                break;
            case 2:
                info.type = PropertyInfo.VECTOR_CLASS;
                info.name = "DiscountForPeriod";
                break;
            case 3:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsCodeDiscountAvailable";
                break;
            case 4:
                info.type = LicensePlanModel.class;
                info.name = "LicensePlan";
                break;
        }
    }
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
