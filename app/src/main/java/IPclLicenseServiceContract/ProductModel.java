package IPclLicenseServiceContract;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 8/29/2017 12:54:15 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class ProductModel implements KvmSerializable {
    

    public String createdAt;
    public String disabledAt;
    public String guid;
    public boolean isDisabled;
    public String majorVersion;
    public String name;
    public String owner;
    
    public ProductModel(){}
    
    public ProductModel(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("ExtensionData"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("ExtensionData");

            
        }
        if (soapObject.hasProperty("CreatedAt"))
        {
            Object obj = soapObject.getProperty("CreatedAt");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                createdAt = j.toString();
            }else if (obj!= null && obj instanceof String){
                createdAt = (String) obj;
            }
        }
        if (soapObject.hasProperty("DisabledAt"))
        {
            Object obj = soapObject.getProperty("DisabledAt");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                disabledAt = j.toString();
            }else if (obj!= null && obj instanceof String){
                disabledAt = (String) obj;
            }
        }
        if (soapObject.hasProperty("Guid"))
        {
            Object obj = soapObject.getProperty("Guid");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                guid = j.toString();
            }else if (obj!= null && obj instanceof String){
                guid = (String) obj;
            }
        }
        if (soapObject.hasProperty("IsDisabled"))
        {
            Object obj = soapObject.getProperty("IsDisabled");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                isDisabled = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                isDisabled = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("MajorVersion"))
        {
            Object obj = soapObject.getProperty("MajorVersion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                majorVersion = j.toString();
            }else if (obj!= null && obj instanceof String){
                majorVersion = (String) obj;
            }
        }
        if (soapObject.hasProperty("Name"))
        {
            Object obj = soapObject.getProperty("Name");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                name = j.toString();
            }else if (obj!= null && obj instanceof String){
                name = (String) obj;
            }
        }
        if (soapObject.hasProperty("Owner"))
        {
            Object obj = soapObject.getProperty("Owner");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                owner = j.toString();
            }else if (obj!= null && obj instanceof String){
                owner = (String) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return null;
            case 1:
                return createdAt;
            case 2:
                return disabledAt;
            case 3:
                return guid;
            case 4:
                return isDisabled;
            case 5:
                return majorVersion;
            case 6:
                return name;
            case 7:
                return owner;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 8;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = null;
                info.name = "ExtensionData";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CreatedAt";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "DisabledAt";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Guid";
                break;
            case 4:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsDisabled";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "MajorVersion";
                break;
            case 6:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Name";
                break;
            case 7:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Owner";
                break;
        }
    }
    
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
