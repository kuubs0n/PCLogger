package IPclLicenseServiceContract;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 8/29/2017 12:54:15 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import IPclLicenseServiceContract.ProductModel;
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class RoleModel implements KvmSerializable {
    

    public String description;
    public String guid;
    public String name;
    public ProductModel product;
    public String productGuid;
    
    public RoleModel(){}
    
    public RoleModel(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("ExtensionData"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("ExtensionData");

            
        }
        if (soapObject.hasProperty("Description"))
        {
            Object obj = soapObject.getProperty("Description");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                description = j.toString();
            }else if (obj!= null && obj instanceof String){
                description = (String) obj;
            }
        }
        if (soapObject.hasProperty("Guid"))
        {
            Object obj = soapObject.getProperty("Guid");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                guid = j.toString();
            }else if (obj!= null && obj instanceof String){
                guid = (String) obj;
            }
        }
        if (soapObject.hasProperty("Name"))
        {
            Object obj = soapObject.getProperty("Name");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                name = j.toString();
            }else if (obj!= null && obj instanceof String){
                name = (String) obj;
            }
        }
        if (soapObject.hasProperty("Product"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("Product");
            product =  new ProductModel (j);
            
        }
        if (soapObject.hasProperty("ProductGuid"))
        {
            Object obj = soapObject.getProperty("ProductGuid");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                productGuid = j.toString();
            }else if (obj!= null && obj instanceof String){
                productGuid = (String) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return null;
            case 1:
                return description;
            case 2:
                return guid;
            case 3:
                return name;
            case 4:
                return product;
            case 5:
                return productGuid;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 6;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = null;
                info.name = "ExtensionData";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Description";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Guid";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Name";
                break;
            case 4:
                info.type = ProductModel.class;
                info.name = "Product";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ProductGuid";
                break;
        }
    }

    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
