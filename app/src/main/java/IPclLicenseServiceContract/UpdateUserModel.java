package IPclLicenseServiceContract;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 8/29/2017 12:54:15 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import IPclLicenseServiceContract.UserDetailsModel;
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class UpdateUserModel implements KvmSerializable {
    

    public String adminGuid;
    public String email;
    public String pin;
    public String roleGuid;
    public String updatedUserGuid;
    public UserDetailsModel userDetails;
    
    public UpdateUserModel(){}
    
    public UpdateUserModel(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("ExtensionData"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("ExtensionData");

            
        }
        if (soapObject.hasProperty("AdminGuid"))
        {
            Object obj = soapObject.getProperty("AdminGuid");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                adminGuid = j.toString();
            }else if (obj!= null && obj instanceof String){
                adminGuid = (String) obj;
            }
        }
        if (soapObject.hasProperty("Email"))
        {
            Object obj = soapObject.getProperty("Email");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                email = j.toString();
            }else if (obj!= null && obj instanceof String){
                email = (String) obj;
            }
        }
        if (soapObject.hasProperty("Pin"))
        {
            Object obj = soapObject.getProperty("Pin");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                pin = j.toString();
            }else if (obj!= null && obj instanceof String){
                pin = (String) obj;
            }
        }
        if (soapObject.hasProperty("RoleGuid"))
        {
            Object obj = soapObject.getProperty("RoleGuid");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                roleGuid = j.toString();
            }else if (obj!= null && obj instanceof String){
                roleGuid = (String) obj;
            }
        }
        if (soapObject.hasProperty("UpdatedUserGuid"))
        {
            Object obj = soapObject.getProperty("UpdatedUserGuid");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                updatedUserGuid = j.toString();
            }else if (obj!= null && obj instanceof String){
                updatedUserGuid = (String) obj;
            }
        }
        if (soapObject.hasProperty("UserDetails"))
        {
            SoapObject j = (SoapObject)soapObject.getProperty("UserDetails");
            userDetails =  new UserDetailsModel (j);
            
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return null;
            case 1:
                return adminGuid;
            case 2:
                return email;
            case 3:
                return pin;
            case 4:
                return roleGuid;
            case 5:
                return updatedUserGuid;
            case 6:
                return userDetails;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 7;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = null;
                info.name = "ExtensionData";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "AdminGuid";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Email";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Pin";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "RoleGuid";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "UpdatedUserGuid";
                break;
            case 6:
                info.type = UserDetailsModel.class;
                info.name = "UserDetails";
                break;
        }
    }

    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
